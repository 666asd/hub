version: '3.1'
services:
  postgres:
    image: blackducksoftware/hub-postgres:5.0.0
    ports: ['55436:5432']
    links: [cfssl, logstash]
    volumes: ['postgres96-data-volume:/var/lib/postgresql/data']
    healthcheck:
      test: [CMD, /usr/local/bin/docker-healthcheck.sh]
      interval: 30s
      timeout: 10s
      retries: 5
    user: postgres:root
    restart: always
    mem_limit: 3072M
  authentication:
    links: [postgres, cfssl, logstash, registration, zookeeper, webapp]
    user: authentication:root
    image: blackducksoftware/hub-authentication:5.0.0
    volumes: ['authentication-volume:/opt/blackduck/hub/hub-authentication/security']
    env_file: [hub-proxy.env]
    healthcheck:
      test: [CMD, /usr/local/bin/docker-healthcheck.sh, 'https://localhost:8443/api/health-checks/liveness',
        /opt/blackduck/hub/hub-authentication/security/root.crt, /opt/blackduck/hub/hub-authentication/security/blackduck_system.crt,
        /opt/blackduck/hub/hub-authentication/security/blackduck_system.key]
      interval: 30s
      timeout: 60s
      retries: 15
    environment: {HUB_MAX_MEMORY: 512m}
    restart: always
    mem_limit: 1024M
  webapp:
    links: [postgres, cfssl, logstash, registration, zookeeper, solr]
    user: tomcat:root
    image: blackducksoftware/hub-webapp:5.0.0
    volumes: ['log-volume:/opt/blackduck/hub/logs', 'webapp-volume:/opt/blackduck/hub/hub-webapp/security']
    env_file: [hub-proxy.env]
    healthcheck:
      test: [CMD, /usr/local/bin/docker-healthcheck.sh, 'https://localhost:8443/api/health-checks/liveness',
        /opt/blackduck/hub/hub-webapp/security/root.crt, /opt/blackduck/hub/hub-webapp/security/blackduck_system.crt,
        /opt/blackduck/hub/hub-webapp/security/blackduck_system.key]
      interval: 30s
      timeout: 60s
      retries: 15
    environment: {HUB_MAX_MEMORY: 2048m}
    restart: always
    mem_limit: 2560M
  scan:
    links: [postgres, cfssl, logstash, registration, zookeeper]
    user: tomcat:root
    image: blackducksoftware/hub-scan:5.0.0
    volumes: ['scan-volume:/opt/blackduck/hub/hub-scan/security']
    env_file: [hub-proxy.env]
    healthcheck:
      test: [CMD, /usr/local/bin/docker-healthcheck.sh, 'https://localhost:8443/api/health-checks/liveness',
        /opt/blackduck/hub/hub-scan/security/root.crt, /opt/blackduck/hub/hub-scan/security/blackduck_system.crt,
        /opt/blackduck/hub/hub-scan/security/blackduck_system.key]
      interval: 30s
      timeout: 60s
      retries: 15
    environment: {HUB_MAX_MEMORY: 2048m}
    restart: always
    mem_limit: 2560M
  jobrunner:
    links: [postgres, cfssl, logstash, registration, zookeeper, solr]
    user: jobrunner:root
    image: blackducksoftware/hub-jobrunner:5.0.0
    env_file: [hub-proxy.env]
    healthcheck:
      test: [CMD, /usr/local/bin/docker-healthcheck.sh]
      interval: 30s
      timeout: 60s
      retries: 15
    environment: {HUB_MAX_MEMORY: 4096m}
    restart: always
    mem_limit: 4608M
  cfssl:
    image: blackducksoftware/hub-cfssl:5.0.0
    volumes: ['cert-volume:/etc/cfssl']
    healthcheck:
      test: [CMD, /usr/local/bin/docker-healthcheck.sh, 'http://localhost:8888/api/v1/cfssl/scaninfo']
      interval: 30s
      timeout: 10s
      retries: 5
    user: cfssl:root
    restart: always
    mem_limit: 512M
  logstash:
    image: blackducksoftware/hub-logstash:5.0.0
    volumes: ['log-volume:/var/lib/logstash/data']
    healthcheck:
      test: [CMD, /usr/local/bin/docker-healthcheck.sh, 'http://localhost:9600/']
      interval: 30s
      timeout: 10s
      retries: 5
    user: logstash:root
    environment: {DAYS_TO_KEEP_LOGS: 30}
    restart: always
    mem_limit: 1024m
  registration:
    image: blackducksoftware/hub-registration:5.0.0
    links: [logstash, cfssl]
    volumes: ['config-volume:/opt/blackduck/hub/hub-registration/config']
    env_file: hub-proxy.env
    healthcheck:
      test: [CMD, /usr/local/bin/docker-healthcheck.sh, 'https://localhost:8443/registration/health-checks/liveness',
        /opt/blackduck/hub/hub-registration/security/root.crt, /opt/blackduck/hub/hub-registration/security/blackduck_system.crt,
        /opt/blackduck/hub/hub-registration/security/blackduck_system.key]
      interval: 30s
      timeout: 10s
      retries: 5
    user: tomcat:root
    restart: always
    mem_limit: 640M
  zookeeper:
    image: blackducksoftware/hub-zookeeper:5.0.0
    links: [logstash]
    volumes: ['zookeeper-data-volume:/opt/blackduck/zookeeper/data', 'zookeeper-datalog-volume:/opt/blackduck/zookeeper/datalog']
    healthcheck:
      test: [CMD, zkServer.sh, status, /opt/blackduck/zookeeper/conf/zoo.cfg]
      interval: 30s
      timeout: 10s
      retries: 5
    user: zookeeper:root
    restart: always
    mem_limit: 384M
  solr:
    image: blackducksoftware/hub-solr:5.0.0
    links: [logstash, zookeeper]
    volumes: ['solr6-volume:/opt/blackduck/hub/solr/cores.data']
    healthcheck:
      test: [CMD, /usr/local/bin/docker-healthcheck.sh, 'http://localhost:8983/solr/project/admin/ping?wt=json']
      interval: 30s
      timeout: 10s
      retries: 5
    user: solr:root
    restart: always
    mem_limit: 640M
  webserver:
    image: blackducksoftware/hub-nginx:5.0.0
    ports: ['443:8443']
    env_file: [hub-webserver.env, hub-bdba.env]
    links: [webapp, cfssl, documentation, authentication, scan]
    volumes: ['webserver-volume:/opt/blackduck/hub/webserver/security']
    healthcheck:
      test: [CMD, /usr/local/bin/docker-healthcheck.sh, 'https://localhost:8443/health-checks/liveness',
        /opt/blackduck/hub/webserver/security/root.crt]
      interval: 30s
      timeout: 10s
      retries: 5
    user: nginx:root
    restart: always
    mem_limit: 640M
  documentation:
    image: blackducksoftware/hub-documentation:5.0.0
    links: [logstash]
    user: tomcat:root
    healthcheck:
      test: [CMD, /usr/local/bin/docker-healthcheck.sh, 'https://127.0.0.1:8443/hubdoc/health-checks/liveness',
        /opt/blackduck/hub/hub-documentation/security/root.crt]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always
    mem_limit: 512M
  uploadcache:
    image: blackducksoftware/hub-upload-cache:1.0.0
    volumes: ['uploadcache-security-volume:/opt/blackduck/hub/hub-upload-cache/security',
      'uploadcache-volume:/opt/blackduck/hub/hub-upload-cache/uploads']
    links: [cfssl, rabbitmq, logstash]
    healthcheck:
      test: [CMD, curl, --insecure, -X, GET, --verbose, 'http://localhost:8086/live?full=1']
      interval: 30s
      timeout: 10s
      retries: 5
    user: uploadcache:root
    env_file: [hub-bdba.env]
    deploy:
      mode: replicated
      restart_policy: {condition: on-failure, delay: 5s, window: 60s}
      resources:
        limits: {memory: 512M}
        reservations: {memory: 512M}
  binaryscanner:
    image: blackducksoftware/appcheck-worker:1.0.0
    links: [cfssl, rabbitmq, logstash, webserver]
    env_file: [hub-bdba.env]
    command: /docker-entrypoint.sh
    deploy:
      mode: replicated
      restart_policy: {condition: on-failure, delay: 5s, window: 60s}
      resources:
        limits: {memory: 2048M, cpus: '1'}
        reservations: {memory: 2048M, cpus: '1'}
  rabbitmq:
    image: blackducksoftware/rabbitmq:1.0.0
    depends_on: [cfssl]
    volumes: ['rabbitmq-security-volume:/opt/blackduck/rabbitmq/security', 'rabbitmq-data-volume:/var/lib/rabbitmq']
    env_file: [hub-bdba.env]
    user: rabbitmq:root
    deploy:
      mode: replicated
      restart_policy: {condition: on-failure, delay: 5s, window: 60s}
      resources:
        limits: {memory: 1024M}
        reservations: {memory: 1024M}
volumes: {postgres96-data-volume: null, authentication-volume: null, cert-volume: null,
  config-volume: null, log-volume: null, webserver-volume: null, webapp-volume: null,
  scan-volume: null, solr6-volume: null, monitor-log-volume: null, zookeeper-data-volume: null,
  zookeeper-datalog-volume: null, uploadcache-security-volume: null, uploadcache-volume: null,
  rabbitmq-security-volume: null, rabbitmq-data-volume: null}
